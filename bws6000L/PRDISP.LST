Turbo Assembler	 Version 2.5	    08/29/16 14:48:15	    Page 1
prdisp.ASM



      1					 ;----------------------------------------------------------------------------
      2					 ;prdisp.asm
      3					 ;----------------------------------------------------------------------------
      4					 PUBLIC	 AOADisp
      5					 EXTRN		 aoaminil:near
      6					 EXTRN		 ASCII2HEX:near	 ; ASCII characters are	read and converted into	hex values  +
      7					 in atoh.asm
      8					 public	 LoadOffset1,LoadOffset2,LoaderSize1,LoaderSize2,StartLogicalSecNum1,		    +
      9					 StartLogicalSecNum2
     10					 public	 ApplNum,JumpOffset1,JumpOffset2,LoadFlag
     11					 EXTRN		 SelectionArray:BYTE,LoadArray:BYTE,RunArray:BYTE
     12					 EXTRN		 LoaderSize:word,StartLogicalSecNum:word,BxPointer1:dword
     13					 EXTRN		 Temp:byte,MemoryOffset:dword,MemFlag:byte
     14					 EXTRN		 RunFlag:byte
     15					 ;The offset read from the keyboard lower and higher 16	bits in	hex
     16					 ; are converted into hex and stored in	4 byte MemoryOffset
     17					 ;  and	used for memory	dump
     18					 ;----------------------------------------------------------------------------
     19					 INCLUDE	 386SCD.INC
1    20
1    21					 .386P
1    22					 ;----------------------------------------------------------------------------
1    23					 ;application structure	for aoa
1    24
1    25	00000000			 typeApplication struc
1    26	00000000  01*(????)			 noOfSectors	 DW	 ?
1    27	00000002  01*(????)			 startingSector	 DW	 ?
1    28	00000004  01*(08*(??))			 nameApplication DB	 8 dup(?)
1    29	0000000C			 typeApplication ends
1    30
1    31
1    32					 ;allApplications	 typeApplication 10 dup(<>)
1    33					 ; ten application vector
1    34
1    35
1    36					 ; command structure
1    37	00000000			 typeCommand		 struc
1    38	00000000  01*(??)			 command	 db	 ?	 ; command
1    39										 ; 0 - exit
1    40										 ; 1 - no command
1    41										 ; 2 - load
1    42										 ; 3 - run
1    43	00000001  01*(08*(??))			 appName	 db	 8 dup(?)
1    44
1    45	00000009  01*(??)			 appIndex	 db	 ?
1    46
1    47	0000000A			 typeCommand		 ends
1    48
1    49					 ;appCommand	 typeCommand <>
1    50					 ;----------------------------------------------------------------------------
1    51					 ; Setup keyboard LED according	to variable NumLock & CapLock
1    52					 ;----------------------------------------------------------------------------
1    53					 KeyboardLED	 MACRO	 NumLock, CapLock	 ; setup keyboard LED
1    54							 LOCAL @@NoCap,@@Write_LED,@@Wait1,@@Wait2,@@Wait3
1    55
1    56							 mov bl, 0
1    57							 mov al, CapLock
Turbo Assembler	 Version 2.5	    08/29/16 14:48:15	    Page 2
prdisp.ASM



1    58							 cmp al, 0
1    59							 jz @@NoCap
1    60							 or bl,	4
1    61					 @@NoCap:
1    62							 mov al, NumLock
1    63							 cmp al, 0
1    64							 jz @@Write_LED
1    65							 or bl,	2
1    66					 @@Write_LED:
1    67							 mov dx, 64h	 ; set CapLock LED
1    68					 @@Wait1:
1    69							 in al,	dx
1    70							 and al, 2
1    71							 jnz @@Wait1
1    72
1    73							 mov dx, 60h	 ; write LED command
1    74							 mov al, 0edh
1    75							 out dx, al
1    76
1    77							 mov dx, 64h
1    78					 @@Wait2:
1    79							 in al,	dx
1    80							 and al, 2
1    81							 jnz @@Wait2
1    82
1    83							 mov dx, 60h
1    84							 mov al, bl
1    85							 out dx, al
1    86
1    87							 mov dx, 64h
1    88					 @@Wait3:
1    89							 in al,	dx
1    90							 and al, 2
1    91							 jnz @@Wait3
1    92
1    93							 ENDM
1    94					 ;----------------------------------------------------------------------------
1    95					 ; Write configuration data to FDC
1    96					 ;----------------------------------------------------------------------------
1    97					 FDC_out	 MACRO
1    98							 local @@loop
1    99							 push	 edx
1   100							 push	 eax
1   101
1   102							 mov	 dx, 3f4h
1   103					 @@loop:
1   104							 in	 al, dx
1   105							 test	 al, 80h
1   106							 jz	 @@loop
1   107
1   108							 inc	 dx
1   109							 pop	 eax
1   110							 out	 dx, al
1   111
1   112							 pop	 edx
1   113							 ENDM
1   114					 ;----------------------------------------------------------------------------
Turbo Assembler	 Version 2.5	    08/29/16 14:48:15	    Page 3
prdisp.ASM



1   115					 ; Read	a byte from FDC
1   116					 ; Return data is in AL
1   117					 ;----------------------------------------------------------------------------
1   118					 FDC_in		 MACRO
1   119							 local @@loop
1   120							 push	 edx
1   121
1   122							 mov	 dx, 3f4h
1   123					 @@loop:
1   124							 in	 al, dx
1   125							 test	 al, 80h
1   126							 jz	 @@loop
1   127
1   128							 inc	 dx
1   129							 in	 al, dx
1   130
1   131							 pop	 edx
1   132							 ENDM
1   133					 ;----------------------------------------------------------------------------
1   134					 ; Debug purpose
1   135					 ;----------------------------------------------------------------------------
1   136					 FDC_al		 MACRO	 ps
1   137							 push	 ebx
1   138							 mov	 ebx, ps
1   139							 int	 0fdh
1   140							 pop	 ebx
1   141							 ENDM
1   142					 ;----------------------------------------------------------------------------
1   143					 ; Wait	for floppy interrupt
1   144					 ;----------------------------------------------------------------------------
1   145					 FDC_wait	 MACRO
1   146							 local @@loop
1   147							 push	 eax
1   148							 push	 fs
1   149
1   150							 mov	 ax, RData_Sel
1   151							 mov	 fs, ax
1   152
1   153					 @@loop:
1   154							 mov	 al, fs:[FloppyReady]
1   155							 cmp	 al, 0
1   156							 jz	 @@loop
1   157							 mov	 al, 0
1   158							 mov	 fs:[FloppyReady], al
1   159
1   160							 pop	 fs
1   161							 pop	 eax
1   162							 ENDM
1   163					 ;----------------------------------------------------------------------------
1   164					 ; Delay a while to wait for other stuff
1   165					 ;----------------------------------------------------------------------------
1   166					 MDelay		 MACRO length
1   167							 local @@loop
1   168							 push	 eax
1   169							 push	 ecx
1   170
1   171							 mov	 ecx, length
Turbo Assembler	 Version 2.5	    08/29/16 14:48:15	    Page 4
prdisp.ASM



1   172					 @@loop:
1   173							 xor	 ax, ax
1   174							 loop @@loop
1   175
1   176							 pop	 ecx
1   177							 pop	 eax
1   178							 ENDM
1   179					 ;----------------------------------------------------------------------------
1   180					 ; Calculate floppy start sector
1   181					 ; Return in AL
1   182					 ;----------------------------------------------------------------------------
1   183					 FDCSector	 MACRO	 sec
1   184							 push	 ebx
1   185							 push	 ecx
1   186
1   187							 mov	 ax, sec
1   188							 mov	 bl, 18
1   189							 div	 bl
1   190							 xor	 cx, cx
1   191							 mov	 cl, ah
1   192							 add	 cl, 1
1   193							 xor	 eax, eax
1   194							 mov	 al, cl
1   195
1   196							 pop	 ecx
1   197							 pop	 ebx
1   198							 ENDM
1   199					 ;----------------------------------------------------------------------------
1   200					 ; Calculate floppy Head
1   201					 ; Return in AL
1   202					 ;----------------------------------------------------------------------------
1   203					 FDCHead MACRO	 sec
1   204							 push	 ebx
1   205
1   206							 xor	 eax, eax
1   207							 mov	 ax, sec
1   208							 mov	 bl, 18
1   209							 div	 bl
1   210							 and	 ah, 0
1   211							 mov	 bl, 2
1   212							 div	 bl
1   213							 mov	 al, ah
1   214							 mov	 ah, 0
1   215
1   216							 pop	 ebx
1   217							 ENDM
1   218					 ;----------------------------------------------------------------------------
1   219					 ; Calculate floppy cylinder
1   220					 ; Return in AL
1   221					 ;----------------------------------------------------------------------------
1   222					 FDCCyl	 MACRO	 sec
1   223							 push	 ebx
1   224
1   225							 xor	 eax, eax
1   226							 mov	 ax, sec
1   227							 mov	 bl, 36
1   228							 div	 bl
Turbo Assembler	 Version 2.5	    08/29/16 14:48:15	    Page 5
prdisp.ASM



1   229							 mov	 ah, 0
1   230
1   231							 pop	 ebx
1   232							 ENDM
1   233					 ;----------------------------------------------------------------------------
1   234					 NewLineM	 MACRO		 ;prints a newline after puthex
1   235							 push	 eax
1   236							 mov	 al,0dh
1   237							 mov	 ah,14
1   238							 int	 10h
1   239							 mov	 al,0ah
1   240							 mov	 ah,14
1   241							 int	 10h
1   242							 pop	 eax
1   243							 ENDM
1   244
1   245					 ;----------------------------------------------------------------------------
1   246					 ;----------------------------------------------------------------------------
1   247					 EnableA20	 MACRO
1   248							 push	 ax
1   249							 in	 al,92h
1   250							 or	 al,00000010b
1   251							 out	 92h,al
1   252							 pop	 ax
1   253							 ENDM
1   254					 ;----------------------------------------------------------------------------
1   255
1   256					 ;----------------------------------------------------------------------------
1   257					 DisableA20	 MACRO
1   258							 push	 ax
1   259							 in	 al,92h
1   260							 and	 al,11111101b
1   261							 out	 92h,al
1   262							 pop	 ax
1   263							 ENDM
1   264					 ;----------------------------------------------------------------------------
1   265
1   266					 ;----------------------------------------------------------------------------
1   267					 JUMP16		 MACRO	 Selector,Offset
1   268							 DB	 0eah
1   269							 DW	 Offset
1   270							 DW	 Selector
1   271							 ENDM
1   272					 ;----------------------------------------------------------------------------
1   273
1   274					 JUMP32		 MACRO	 Selector,Offset
1   275							 DB	 0eah
1   276							 DW	 OFFSET
1   277							 DW	 0
1   278							 DW	 Selector
1   279							 ENDM
1   280					 ;----------------------------------------------------------------------------
1   281
1   282					 ;----------------------------------------------------------------------------
1   283					 CALL16		 MACRO	 Selector,Offset
1   284							 DB	 9ah
1   285							 DW	 Offset
Turbo Assembler	 Version 2.5	    08/29/16 14:48:15	    Page 6
prdisp.ASM



1   286							 DW	 Selector
1   287							 ENDM
1   288					 ;----------------------------------------------------------------------------
1   289
1   290					 CALL32		 MACRO	 Selector,Offset
1   291							 DB	 9ah
1   292							 DW	 Offset
1   293							 DW	 0
1   294							 DW	 Selector
1   295							 ENDM
1   296					 ;----------------------------------------------------------------------------
1   297	00000000			 Desc		 STRUC
1   298	00000000  01*(0000)		 LimitL		 DW	 0
1   299	00000002  01*(0000)		 BaseL		 DW	 0
1   300	00000004  01*(00)		 BaseM		 DB	 0
1   301	00000005  01*(00)		 Attributes	 DB	 0
1   302	00000006  01*(00)		 LimitH		 DB	 0
1   303	00000007  01*(00)		 BaseH		 DB	 0
1   304	00000008			 Desc		 ENDS
1   305					 ;----------------------------------------------------------------------------
1   306
1   307					 ;----------------------------------------------------------------------------
1   308	00000000			 Gate		 STRUC
1   309	00000000  01*(0000)		 OffsetL	 DW	 0
1   310	00000002  01*(0000)		 Selector	 DW	 0
1   311	00000004  01*(00)		 DCount		 DB	 0
1   312	00000005  01*(00)		 GType		 DB	 0
1   313	00000006  01*(0000)		 OffsetH	 DW	 0
1   314	00000008			 Gate		 ENDS
1   315					 ;----------------------------------------------------------------------------
1   316
1   317					 ;----------------------------------------------------------------------------
1   318	00000000			 PDesc		 STRUC
1   319	00000000  01*(0000)		 Limit		 DW	 0
1   320	00000002  01*(00000000)		 Base		 DD	 0
1   321	00000006			 PDesc		 ENDS
1   322					 ;----------------------------------------------------------------------------
1   323
1   324					 ;----------------------------------------------------------------------------
1   325	00000000			 TSS		 STRUC
1   326	00000000  01*(0000)		 TRLink		 DW	 0
1   327	00000002  01*(0000)				 DW	 0
1   328	00000004  01*(00000000)		 TRESP0		 DD	 0
1   329	00000008  01*(0000)		 TRSS0		 DW	 0
1   330	0000000A  01*(0000)				 DW	 0
1   331	0000000C  01*(00000000)		 TRESP1		 DD	 0
1   332	00000010  01*(0000)		 TRSS1		 DW	 0
1   333	00000012  01*(0000)				 DW	 0
1   334	00000014  01*(00000000)		 TRESP2		 DD	 0
1   335	00000018  01*(0000)		 TRSS2		 DW	 0
1   336	0000001A  01*(0000)				 DW	 0
1   337	0000001C  01*(00000000)		 TRCR3		 DD	 0
1   338	00000020  01*(00000000)		 TREIP		 DD	 0	;EIP
1   339	00000024  01*(00000000)		 TREFlag	 DD	 0	;EFLAGS
1   340	00000028  01*(00000000)		 TREAX		 DD	 0	;EAX
1   341	0000002C  01*(00000000)		 TRECX		 DD	 0	;ECX
1   342	00000030  01*(00000000)		 TREDX		 DD	 0	;EDX
Turbo Assembler	 Version 2.5	    08/29/16 14:48:15	    Page 7
prdisp.ASM



1   343	00000034  01*(00000000)		 TREBX		 DD	 0	;EBX
1   344	00000038  01*(00000000)		 TRESP		 DD	 0	;ESP
1   345	0000003C  01*(00000000)		 TREBP		 DD	 0	;EBP
1   346	00000040  01*(00000000)		 TRESI		 DD	 0	;ESI
1   347	00000044  01*(00000000)		 TREDI		 DD	 0	;EDI
1   348	00000048  01*(0000)		 TRES		 DW	 0	;ES
1   349	0000004A  01*(0000)				 DW	 0
1   350	0000004C  01*(0000)		 TRCS		 DW	 0
1   351	0000004E  01*(0000)				 DW	 0
1   352	00000050  01*(0000)		 TRSS		 DW	 0	;SS
1   353	00000052  01*(0000)				 DW	 0
1   354	00000054  01*(0000)		 TRDS		 DW	 0	;DS
1   355	00000056  01*(0000)				 DW	 0
1   356	00000058  01*(0000)		 TRFS		 DW	 0	;FS
1   357	0000005A  01*(0000)				 DW	 0
1   358	0000005C  01*(0000)		 TRGS		 DW	 0	;GS
1   359	0000005E  01*(0000)				 DW	 0
1   360	00000060  01*(0000)		 TRLDTR		 DW	 0
1   361	00000062  01*(0000)				 DW	 0
1   362	00000064  01*(0000)		 TRTrip		 DW	 0
1   363	00000066  01*(0068)		 TRIOMap	 DW	 $+2
1   364	00000068			 TSS		 ENDS
1   365					 ;----------------------------------------------------------------------------
1   366
1   367					 ;----------------------------------------------------------------------------
1   368		  = 0090		 ATDR		 EQU	 90h
1   369		  = 0092		 ATDW		 EQU	 92h
1   370		  = 0093		 ATDWA		 EQU	 93h
1   371		  = 0096		 ATSWA		 EQU	 96h
1   372		  = 0098		 ATCE		 EQU	 98h
1   373		  = 009A		 ATCER		 EQU	 9ah
1   374		  = 009C		 ATCCO		 EQU	 9ch
1   375		  = 009E		 ATCCOR		 EQU	 9eh
1   376					 ;----------------------------------------------------------------------------
1   377
1   378					 ;----------------------------------------------------------------------------
1   379		  = 0082		 ATLDT		 EQU	 82h
1   380		  = 0085		 ATTaskGate	 EQU	 85h
1   381		  = 0089		 AT386TSS	 EQU	 89h
1   382		  = 008C		 AT386CGate	 EQU	 8ch
1   383		  = 008E		 AT386IGate	 EQU	 8eh
1   384		  = 008F		 AT386TGate	 EQU	 8fh
1   385					 ;----------------------------------------------------------------------------
1   386
1   387					 ;----------------------------------------------------------------------------
1   388		  = 0000		 DPL0		 EQU	 00h ;DPL=0
1   389		  = 0020		 DPL1		 EQU	 20h ;DPL=1
1   390		  = 0040		 DPL2		 EQU	 40h ;DPL=2
1   391		  = 0060		 DPL3		 EQU	 60h ;DPL=3
1   392					 ;----------------------------------------------------------------------------
1   393
1   394					 ;----------------------------------------------------------------------------
1   395		  = 0000		 RPL0		 EQU	 00h ;RPL=0
1   396		  = 0001		 RPL1		 EQU	 01h ;RPL=1
1   397		  = 0002		 RPL2		 EQU	 02h ;RPL=2
1   398		  = 0003		 RPL3		 EQU	 03h ;RPL=3
1   399					 ;----------------------------------------------------------------------------
Turbo Assembler	 Version 2.5	    08/29/16 14:48:15	    Page 8
prdisp.ASM



1   400
1   401					 ;----------------------------------------------------------------------------
1   402		  = 0000		 IOPL0		 EQU	 0000h ;IOPL=0
1   403		  = 1000		 IOPL1		 EQU	 1000h ;IOPL=1
1   404		  = 2000		 IOPL2		 EQU	 2000h ;IOPL=2
1   405		  = 3000		 IOPL3		 EQU	 3000h ;IOPL=3
1   406					 ;----------------------------------------------------------------------------
1   407
1   408					 ;----------------------------------------------------------------------------
1   409		  = 0040		 D32		 EQU	 40h
1   410		  = 0080		 GL		 EQU	 80h
1   411		  = 0004		 TIL		 EQU	 04h
1   412		  = 00020000		 VMFL		 EQU	 00020000h ;VMF=1
1   413		  = 0002		 VMFLW		 EQU	 0002h
1   414		  = 0200		 IFL		 EQU	 00000200h ;IF=1
1   415		  = 00010000		 RFL		 EQU	 00010000h ;
1   416		  = 0001		 RFLW		 EQU	 0001h
1   417		  = 4000		 NTL		 EQU	 00004000h ;NT=1
1   418					 ;----------------------------------------------------------------------------
1   419
1   420					 ;----------------------------------------------------------------------------
1   421		  = 0001		 PL		 EQU	 1
1   422		  = 0000		 RWR		 EQU	 0
1   423		  = 0002		 RWW		 EQU	 2
1   424		  = 0000		 USS		 EQU	 0
1   425		  = 0004		 USU		 EQU	 4
1   426					 ;----------------------------------------------------------------------------
1   427		  = 0064		 HZ		 EQU	 100
1   428		  = 001234DC		 CLOCK_TICK_RATE EQU	 1193180
1   429		  = 2E9C		 LATCH		 EQU	 ((CLOCK_TICK_RATE+HZ/2)/HZ)
1   430					 ;----------------------------------------------------------------------------
1   431
    432					 INCLUDE	 DCYCLE.INC
1   433					 EXTRN		 PUTHEX32R:NEAR
1   434					 EXTRN		 WriteString:NEAR
1   435					 EXTRN		 ClearScreen:NEAR
1   436					 EXTRN		 GETKEYFORMENU:NEAR
1   437					 EXTRN		 NEWLINE:NEAR
1   438					 EXTRN		 GET_PARAMETER:NEAR
1   439					 EXTRN		 ResetPointer:NEAR
1   440					 EXTRN		 PRINTMEMR:NEAR
1   441
1   442
    443					 ;----------------------------------------------------------------------------
    444	    0000			 RDataSeg	 SEGMENT PARA public USE16 'REALDATA'
    445
    446	    0000  0D 0A	50 72 65 73 73+	 prompt1 DB	 13,10,'Press any key to continue: ',13,10,0
    447		  20 61	6E 79 20 6B 65+
    448		  79 20	74 6F 20 63 6F+
    449		  6E 74	69 6E 75 65 3A+
    450		  20 0D	0A 00
    451					 ;----------------------------------------------------------------------------
    452					 ;----------------------------------------------------------------------------
    453					 ;===============================================================================
    454	    0020  0D 0A	20 20 20 20 20+	 MenuMsg db 13,10,'			    AOA	INTERFACE MENU ',13,10,0
    455		  20 20	20 20 20 20 20+
    456		  20 20	20 20 20 20 20+
Turbo Assembler	 Version 2.5	    08/29/16 14:48:15	    Page 9
prdisp.ASM



    457		  20 20	20 20 20 20 41+
    458		  4F 41	20 49 4E 54 45+
    459		  52 46	41 43 45 20 4D+
    460		  45 4E	55 20 0D 0A 00
    461	    0051  0D 0A	20 20 20 20 20+	 UnivMsg db 13,10,'		      Dept Of COSC, TOWSON UNIVERESITY',13,10,0
    462		  20 20	20 20 20 20 20+
    463		  20 20	20 20 20 20 20+
    464		  44 65	70 74 20 4F 66+
    465		  20 43	4F 53 43 2C 20+
    466		  54 4F	57 53 4F 4E 20+
    467		  55 4E	49 56 45 52 45+
    468		  53 49	54 59 0D 0A 00
    469	    0089  20 20	20 20 20 20 20+	 ApplMsg db '			  1. Choose an Application',13,10,0
    470		  20 20	20 20 20 20 20+
    471		  20 20	20 20 20 20 20+
    472		  31 2E	20 43 68 6F 6F+
    473		  73 65	20 61 6E 20 41+
    474		  70 70	6C 69 63 61 74+
    475		  69 6F	6E 0D 0A 00
    476	    00B9  20 20	20 20 20 20 20+	 LoadMsg db '			  2. Load the Application ',13,10,0
    477		  20 20	20 20 20 20 20+
    478		  20 20	20 20 20 20 20+
    479		  32 2E	20 4C 6F 61 64+
    480		  20 74	68 65 20 41 70+
    481		  70 6C	69 63 61 74 69+
    482		  6F 6E	20 0D 0A 00
    483	    00E9  20 20	20 20 20 20 20+	 RunMsg	 db '			  3. Run the Application  ',13,10,0
    484		  20 20	20 20 20 20 20+
    485		  20 20	20 20 20 20 20+
    486		  33 2E	20 52 75 6E 20+
    487		  74 68	65 20 41 70 70+
    488		  6C 69	63 61 74 69 6F+
    489		  6E 20	20 0D 0A 00
    490	    0119  20 20	20 20 20 20 20+	 CpuMsg	 db '			  4. Run Editor',13,10,0
    491		  20 20	20 20 20 20 20+
    492		  20 20	20 20 20 20 20+
    493		  34 2E	20 52 75 6E 20+
    494		  45 64	69 74 6F 72 0D+
    495		  0A 00
    496	    013E  20 20	20 20 20 20 20+	 MemMsg	 db '			  5. Search for	string	      ',13,10,0
    497		  20 20	20 20 20 20 20+
    498		  20 20	20 20 20 20 20+
    499		  35 2E	20 53 65 61 72+
    500		  63 68	20 66 6F 72 20+
    501		  73 74	72 69 6E 67 20+
    502		  20 20	20 20 20 20 20+
    503		  0D 0A	00
    504	    0172  20 20	20 20 20 20 20+	 A1Msg	 db '			  6. For Future	usage	  ',13,10,0
    505		  20 20	20 20 20 20 20+
    506		  20 20	20 20 20 20 20+
    507		  36 2E	20 46 6F 72 20+
    508		  46 75	74 75 72 65 20+
    509		  75 73	61 67 65 20 20+
    510		  20 20	20 0D 0A 00
    511	    01A2  20 20	20 20 20 20 20+	 A2Msg	 db '			  7. For Future	usage	  ',13,10,0
    512		  20 20	20 20 20 20 20+
    513		  20 20	20 20 20 20 20+
Turbo Assembler	 Version 2.5	    08/29/16 14:48:15	    Page 10
prdisp.ASM



    514		  37 2E	20 46 6F 72 20+
    515		  46 75	74 75 72 65 20+
    516		  75 73	61 67 65 20 20+
    517		  20 20	20 0D 0A 00
    518	    01D2  20 20	20 20 20 20 20+	 A3Msg	 db '			  8. For Future	usage	  ',13,10,0
    519		  20 20	20 20 20 20 20+
    520		  20 20	20 20 20 20 20+
    521		  38 2E	20 46 6F 72 20+
    522		  46 75	74 75 72 65 20+
    523		  75 73	61 67 65 20 20+
    524		  20 20	20 0D 0A 00
    525	    0202  20 20	20 20 20 20 20+	 A4Msg	 db '			  9. Memory Dump	  ',13,10,0
    526		  20 20	20 20 20 20 20+
    527		  20 20	20 20 20 20 20+
    528		  39 2E	20 4D 65 6D 6F+
    529		  72 79	20 44 75 6D 70+
    530		  20 20	20 20 20 20 20+
    531		  20 20	20 0D 0A 00
    532	    0232  20 20	20 20 20 20 20+	 ExitMsg db '			  0. Exit from AOA	  ',13,10,0
    533		  20 20	20 20 20 20 20+
    534		  20 20	20 20 20 20 20+
    535		  30 2E	20 45 78 69 74+
    536		  20 66	72 6F 6D 20 41+
    537		  4F 41	20 20 20 20 20+
    538		  20 20	20 0D 0A 00
    539					 ;----------------------------------------------------------------------------
    540					 ;==============================================================================
    541	    0262  0D 0A	20 20 20 20 20+	 MenuMsg1 db 13,10,'			   AOA APPLICATION MENU	',13,10,0
    542		  20 20	20 20 20 20 20+
    543		  20 20	20 20 20 20 20+
    544		  20 20	20 20 41 4F 41+
    545		  20 41	50 50 4C 49 43+
    546		  41 54	49 4F 4E 20 4D+
    547		  45 4E	55 20 0D 0A 00
    548	    0293  0D 0A	20 20 20 20 20+	 UnivMsg1 db 13,10,'		     Dept Of COSC, TOWSON UNIVERESITY',13,10,0
    549		  20 20	20 20 20 20 20+
    550		  20 20	20 20 20 44 65+
    551		  70 74	20 4F 66 20 43+
    552		  4F 53	43 2C 20 54 4F+
    553		  57 53	4F 4E 20 55 4E+
    554		  49 56	45 52 45 53 49+
    555		  54 59	0D 0A 00
    556	    02C9  20 20	20 20 20 20 20+	 App1Msg db '			 1. Application	1    ',13,10,0
    557		  20 20	20 20 20 20 20+
    558		  20 20	20 20 20 20 31+
    559		  2E 20	41 70 70 6C 69+
    560		  63 61	74 69 6F 6E 20+
    561		  31 20	20 20 20 0D 0A+
    562		  00
    563	    02F4  20 20	20 20 20 20 20+	 App2Msg db '			 2. Application	2    ',13,10,0
    564		  20 20	20 20 20 20 20+
    565		  20 20	20 20 20 20 32+
    566		  2E 20	41 70 70 6C 69+
    567		  63 61	74 69 6F 6E 20+
    568		  32 20	20 20 20 0D 0A+
    569		  00
    570	    031F  20 20	20 20 20 20 20+	 App0Msg db '			 0. Exit from this menu	       ',13,10,0
Turbo Assembler	 Version 2.5	    08/29/16 14:48:15	    Page 11
prdisp.ASM



    571		  20 20	20 20 20 20 20+
    572		  20 20	20 20 20 20 30+
    573		  2E 20	45 78 69 74 20+
    574		  66 72	6F 6D 20 74 68+
    575		  69 73	20 6D 65 6E 75+
    576		  20 20	20 20 20 20 20+
    577		  20 0D	0A 00
    578					 ;==============================================================================
    579					 ;User prompt messeges
    580
    581	    0354  0D 0A	20 20 20 20 20+	 Prmt1Msg  db 13,10,'	      Select from the above menu:  ',0
    582		  20 20	20 20 53 65 6C+
    583		  65 63	74 20 66 72 6F+
    584		  6D 20	74 68 65 20 61+
    585		  62 6F	76 65 20 6D 65+
    586		  6E 75	3A 20 20 00
    587	    037D  0D 0A	20 20 20 20 20+	 Prmt2Msg  db 13,10,'		   This	service	is not yet available !',13,10,0
    588		  20 20	20 20 20 20 20+
    589		  20 20	54 68 69 73 20+
    590		  73 65	72 76 69 63 65+
    591		  20 69	73 20 6E 6F 74+
    592		  20 79	65 74 20 61 76+
    593		  61 69	6C 61 62 6C 65+
    594		  20 21	0D 0A 00
    595	    03B3  0D 0A	20 20 20 20 20+	 Prmt3Msg  db 13,10,'	      Enter the	number of Sectors to load :',0
    596		  20 20	20 20 45 6E 74+
    597		  65 72	20 74 68 65 20+
    598		  6E 75	6D 62 65 72 20+
    599		  6F 66	20 53 65 63 74+
    600		  6F 72	73 20 74 6F 20+
    601		  6C 6F	61 64 20 3A 00
    602	    03E4  0D 0A	20 20 20 20 20+	 Prmt31Msg  db 13,10,'	       Enter the starting Sector Number	to load	:',0
    603		  20 20	20 20 45 6E 74+
    604		  65 72	20 74 68 65 20+
    605		  73 74	61 72 74 69 6E+
    606		  67 20	53 65 63 74 6F+
    607		  72 20	4E 75 6D 62 65+
    608		  72 20	74 6F 20 6C 6F+
    609		  61 64	20 3A 00
    610	    041A  0D 0A	20 20 20 20 20+	 Prmt4Msg  db 13,10,'	      Exiting from AOA...!!!',0
    611		  20 20	20 20 45 78 69+
    612		  74 69	6E 67 20 66 72+
    613		  6F 6D	20 41 4F 41 2E+
    614		  2E 2E	21 21 21 00
    615	    043C  0D 0A	20 20 20 20 20+	 Prmt5Msg  db 13,10,'				 ',0
    616		  20 20	20 20 20 20 20+
    617		  20 20	20 20 20 20 20+
    618		  20 20	20 20 20 20 20+
    619		  20 20	00
    620	    045B  0D 0A	20 20 20 20 20+	 Prmt6Msg  db 13,10,'	      Your parameters r	saved u	can now	load the program',13,10,0
    621		  20 20	20 20 59 6F 75+
    622		  72 20	70 61 72 61 6D+
    623		  65 74	65 72 73 20 72+
    624		  20 73	61 76 65 64 20+
    625		  75 20	63 61 6E 20 6E+
    626		  6F 77	20 6C 6F 61 64+
    627		  20 74	68 65 20 70 72+
Turbo Assembler	 Version 2.5	    08/29/16 14:48:15	    Page 12
prdisp.ASM



    628		  6F 67	72 61 6D 0D 0A+
    629		  00
    630	    049B  0D 0A	20 20 20 20 20+	 Prmt7Msg  db 13,10,'	      You have loaded the program sucessfully ',13,10,0
    631		  20 20	20 20 59 6F 75+
    632		  20 68	61 76 65 20 6C+
    633		  6F 61	64 65 64 20 74+
    634		  68 65	20 70 72 6F 67+
    635		  72 61	6D 20 73 75 63+
    636		  65 73	73 66 75 6C 6C+
    637		  79 20	0D 0A 00
    638	    04D1  0D 0A	20 20 20 20 20+	 Prmt8Msg  db 13,10,'	      Ur now ready to run the program	    ',13,10,0
    639		  20 20	20 20 55 72 20+
    640		  6E 6F	77 20 72 65 61+
    641		  64 79	20 74 6F 20 72+
    642		  75 6E	20 74 68 65 20+
    643		  70 72	6F 67 72 61 6D+
    644		  20 20	20 20 20 20 20+
    645		  0D 0A	00
    646	    0505  0D 0A	20 20 20 20 20+	 Prmt9Msg  db 13,10,'	      Enter 2 to load the application '
    647		  20 20	20 20 45 6E 74+
    648		  65 72	20 32 20 74 6F+
    649		  20 6C	6F 61 64 20 74+
    650		  68 65	20 61 70 70 6C+
    651		  69 63	61 74 69 6F 6E+
    652		  20
    653	    0530  0D 0A	20 20 20 20 20+	 Prmt10Msg db 13,10,'			       ',13,10,0
    654		  20 20	20 20 20 20 20+
    655		  20 20	20 20 20 20 20+
    656		  20 20	20 20 20 20 20+
    657		  0D 0A	00
    658	    054F  0D 0A	20 20 20 20 20+	 Prmt11Msg db 13,10,'	       Insert the Hello	world application disk',13,10,0
    659		  20 20	20 20 20 49 6E+
    660		  73 65	72 74 20 74 68+
    661		  65 20	48 65 6C 6C 6F+
    662		  20 77	6F 72 6C 64 20+
    663		  61 70	70 6C 69 63 61+
    664		  74 69	6F 6E 20 64 69+
    665		  73 6B	0D 0A 00
    666	    0585  0D 0A	20 20 20 20 20+	 Prmt12Msg db 13,10,'	       Insert the Bubble sort application disk',13,10,0
    667		  20 20	20 20 20 49 6E+
    668		  73 65	72 74 20 74 68+
    669		  65 20	42 75 62 62 6C+
    670		  65 20	73 6F 72 74 20+
    671		  61 70	70 6C 69 63 61+
    672		  74 69	6F 6E 20 64 69+
    673		  73 6B	0D 0A 00
    674	    05BB  0D 0A	20 20 20 20 20+	 Prmt20Msg db 13,10,'	       U have selected to exit from this menu',13,10,0
    675		  20 20	20 20 20 55 20+
    676		  68 61	76 65 20 73 65+
    677		  6C 65	63 74 65 64 20+
    678		  74 6F	20 65 78 69 74+
    679		  20 66	72 6F 6D 20 74+
    680		  68 69	73 20 6D 65 6E+
    681		  75 0D	0A 00
    682	    05F0  0D 0A	20 20 20 20 20+	 Prmt21Msg db 13,10,'	       Which application you want to load?',13,10,0
    683		  20 20	20 20 20 57 68+
    684		  69 63	68 20 61 70 70+
Turbo Assembler	 Version 2.5	    08/29/16 14:48:15	    Page 13
prdisp.ASM



    685		  6C 69	63 61 74 69 6F+
    686		  6E 20	79 6F 75 20 77+
    687		  61 6E	74 20 74 6F 20+
    688		  6C 6F	61 64 3F 0D 0A+
    689		  00
    690	    0622  0D 0A	20 20 20 20 20+	 Prmt22Msg db 13,10,'	       1. Application 1',13,10,0
    691		  20 20	20 20 20 31 2E+
    692		  20 41	70 70 6C 69 63+
    693		  61 74	69 6F 6E 20 31+
    694		  0D 0A	00
    695	    0641  0D 0A	20 20 20 20 20+	 Prmt23Msg db 13,10,'	       2. Application 2',13,10,0
    696		  20 20	20 20 20 32 2E+
    697		  20 41	70 70 6C 69 63+
    698		  61 74	69 6F 6E 20 32+
    699		  0D 0A	00
    700	    0660  0D 0A	20 20 20 20 20+	 PrmtLBMsg db 13,10,'	       Enter the Load Offset address:',13,10,0
    701		  20 20	20 20 20 45 6E+
    702		  74 65	72 20 74 68 65+
    703		  20 4C	6F 61 64 20 4F+
    704		  66 66	73 65 74 20 61+
    705		  64 64	72 65 73 73 3A+
    706		  0D 0A	00
    707	    068D  0D 0A	20 20 20 20 20+	 PrmtLA1Msg db 13,10,'		Enter the lower	16 bit offset:',0
    708		  20 20	20 20 20 45 6E+
    709		  74 65	72 20 74 68 65+
    710		  20 6C	6F 77 65 72 20+
    711		  31 36	20 62 69 74 20+
    712		  6F 66	66 73 65 74 3A+
    713		  00
    714	    06B8  0D 0A	20 20 20 20 20+	 PrmtLA2Msg db 13,10,'		Enter the higher 16 bit	offset:',0
    715		  20 20	20 20 20 45 6E+
    716		  74 65	72 20 74 68 65+
    717		  20 68	69 67 68 65 72+
    718		  20 31	36 20 62 69 74+
    719		  20 6F	66 66 73 65 74+
    720		  3A 00
    721	    06E4  0D 0A	20 20 20 20 20+	 PrmtSAMsg db 13,10,'	       Enter the code segment offset:',0
    722		  20 20	20 20 20 45 6E+
    723		  74 65	72 20 74 68 65+
    724		  20 63	6F 64 65 20 73+
    725		  65 67	6D 65 6E 74 20+
    726		  6F 66	66 73 65 74 3A+
    727		  00
    728	    070F  0D 0A	20 20 20 20 20+	 PrmtRunMsg db 13,10,'		Which application you want to run?',13,10,0
    729		  20 20	20 20 20 57 68+
    730		  69 63	68 20 61 70 70+
    731		  6C 69	63 61 74 69 6F+
    732		  6E 20	79 6F 75 20 77+
    733		  61 6E	74 20 74 6F 20+
    734		  72 75	6E 3F 0D 0A 00
    735
    736					 ;--------------------------------------------------------
    737	    0740  0D 0A	20 20 20 20 20+	 HelloWorld1Msg	db 13,10,'	    Now	invoking application',0
    738		  20 20	20 20 20 4E 6F+
    739		  77 20	69 6E 76 6F 6B+
    740		  69 6E	67 20 61 70 70+
    741		  6C 69	63 61 74 69 6F+
Turbo Assembler	 Version 2.5	    08/29/16 14:48:15	    Page 14
prdisp.ASM



    742		  6E 00
    743	    0765  0D 0A	20 20 20 20 20+	 MemoryDump1Msg	db 13,10,'	   Enter the Memory address to be printed: ',0
    744		  20 20	20 20 45 6E 74+
    745		  65 72	20 74 68 65 20+
    746		  4D 65	6D 6F 72 79 20+
    747		  61 64	64 72 65 73 73+
    748		  20 74	6F 20 62 65 20+
    749		  70 72	69 6E 74 65 64+
    750		  3A 20	00
    751
    752					 ;==============================================================================
    753					 ;Error	messeges
    754
    755	    0799  0D 0A	20 20 20 20 20+	 Err1Msg db 13,10,'	 ERR: U	have entered an	invalid	option ...try again',13,10,0
    756		  20 45	52 52 3A 20 55+
    757		  20 68	61 76 65 20 65+
    758		  6E 74	65 72 65 64 20+
    759		  61 6E	20 69 6E 76 61+
    760		  6C 69	64 20 6F 70 74+
    761		  69 6F	6E 20 2E 2E 2E+
    762		  74 72	79 20 61 67 61+
    763		  69 6E	0D 0A 00
    764	    07D6  0D 20	20 20 20 20 20+	 Err2Msg db 13,'	 ERR: U	must select an application before u can	load it',13,10,0
    765		  20 20	20 45 52 52 3A+
    766		  20 55	20 6D 75 73 74+
    767		  20 73	65 6C 65 63 74+
    768		  20 61	6E 20 61 70 70+
    769		  6C 69	63 61 74 69 6F+
    770		  6E 20	62 65 66 6F 72+
    771		  65 20	75 20 63 61 6E+
    772		  20 6C	6F 61 64 20 69+
    773		  74 0D	0A 00
    774	    0819  0D 20	20 20 20 20 20+	 Err3Msg db 13,'	 ERR: U	must load an application before	u can run it',13,10,0
    775		  20 20	20 45 52 52 3A+
    776		  20 55	20 6D 75 73 74+
    777		  20 6C	6F 61 64 20 61+
    778		  6E 20	61 70 70 6C 69+
    779		  63 61	74 69 6F 6E 20+
    780		  62 65	66 6F 72 65 20+
    781		  75 20	63 61 6E 20 72+
    782		  75 6E	20 69 74 0D 0A+
    783		  00
    784	    0859  0D 0A	20 20 20 20 20+	 Err4Msg db 13,10,'					    ',13,10,0
    785		  20 20	20 20 20 20 20+
    786		  20 20	20 20 20 20 20+
    787		  20 20	20 20 20 20 20+
    788		  20 20	20 20 20 20 20+
    789		  20 20	20 20 20 20 20+
    790		  20 0D	0A 00
    791	    0887  0D 0A	20 20 20 20 20+	 Err5Msg db 13,10,'					    ',13,10,0
    792		  20 20	20 20 20 20 20+
    793		  20 20	20 20 20 20 20+
    794		  20 20	20 20 20 20 20+
    795		  20 20	20 20 20 20 20+
    796		  20 20	20 20 20 20 20+
    797		  20 0D	0A 00
    798	    08B5  0000			 temp1		 dw	 0000h
Turbo Assembler	 Version 2.5	    08/29/16 14:48:15	    Page 15
prdisp.ASM



    799	    08B7  00010000		 LoadOffset1	 dd	 00010000h
    800	    08BB  00005678		 LoadOffset2	 dd	 5678h
    801	    08BF  ????????		 LoadOffset3	 dd	 ?
    802	    08C3  31			 ApplNum	 db	 '1'
    803	    08C4  0140			 LoaderSize1	 dw	 140h  ; size of test.exe
    804					 ;LoaderSize1	 dw	 38h  ;	size of	test.exe
    805	    08C6  ????			 LoaderSize2	 dw	 ?
    806	    08C8  ????			 LoaderSize3	 dw	 ?
    807	    08CA  004E			 StartLogicalSecNum1	 dw	 4eh  ;start of	test.exe file
    808	    08CC  ????			 StartLogicalSecNum2	 dw	 ?
    809	    08CE  ????			 StartLogicalSecNum3	 dw	 ?
    810	    08D0  1000			 JumpOffset1	 dw	 1000h
    811	    08D2  2222			 JumpOffset2	 dw	 2222h
    812	    08D4  3333			 JumpOffset3	 dw	 3333h
    813	    08D6  31			 ParamFlag	 db	 '1'
    814	    08D7  01			 LoadFlag	 db	 1h
    815	    08D8  0000 0820		 LoaderAddress	 dw	 0000h,0820h
    816	    08DC  00			 LoadingDone	 db	 0h
    817
    818	    08DD			 RDataSeg	 Ends
    819					 ;----------------------------------------------------------------------------
    820	    0000			 RCodeSeg	 SEGMENT PARA public USE16 'CODE'
    821							 ASSUME	 CS:RCodeSeg,ds:RDataSeg
    822
    823					 ;----------------------------------------------------------------------------
    824	    0000			 AOADisp PROC
    825
    826	    0000  66| 50			 PUSH	 eax
    827	    0002  66| 56			 PUSH	 esi
    828	    0004  66| 51			 PUSH	 ecx
    829	    0006  66| 57			 PUSH	 edi
    830
    831					 ;=======================================
    832	    0008			 TRY_A:
    833	    0008  E8 0000e			 CALL	 ClearScreen
    834	    000B			 LIST_A:
    835						 ;***************************
    836	    000B  E8 02CB			 CALL	 MAIN_MENU			 ;Displays AOA Main Menu
    837						 ;***************************
    838
    839	    000E  E9 0101			 JMP	 SUCESS_A
    840
    841	    0011			 LOADER:
    842	    0011  E8 0000e			 call	 ClearScreen
    843	    0014  E8 0000e			 call	 ResetPointer
    844	    0017  66| BE 000005F0r		 MOV	 ESI, OFFSET Prmt21Msg
    845	    001D  E8 0000e			 CALL	  WRITESTRING
    846	    0020  66| BE 00000622r		 MOV	 ESI, OFFSET Prmt22Msg
    847	    0026  E8 0000e			 CALL	  WRITESTRING
    848	    0029  66| BE 00000641r		 MOV	 ESI, OFFSET Prmt23Msg
    849	    002F  E8 0000e			 CALL	  WRITESTRING
    850	    0032  66| BE 00000354r		 MOV	 ESI, OFFSET Prmt1Msg
    851	    0038  E8 0000e			 CALL	  WRITESTRING
    852
    853						 ;CALL	 GETKEYFORMENU	;hard coded RKK
    854	    003B  B0 31				 mov	 al, '1'
    855
Turbo Assembler	 Version 2.5	    08/29/16 14:48:15	    Page 16
prdisp.ASM



    856	    003D  A2 08C3r			 MOV	 [ApplNum],al
    857	    0040  3A 06	08D6r			 cmp	 al,[ParamFlag]
    858	    0044  74 02				 JE	 Loading_Ok
    859	    0046  EB C3				 JMP	 LIST_A
    860	    0048			 Loading_Ok:
    861						 ;mov	 [LoadFlag],1  RKK hard	coded
    862						 ;push eax
    863						 ;mov al, 'K'
    864						 ;mov ah, 14
    865						 ;int 10h
    866						 ;mov ah, 10h
    867						 ;int 16h
    868						 ;pop eax
    869	    0048  E9 0235			 JMP	 EXIT
    870
    871	    004B			 RUNNER:
    872	    004B  80 3E	0000e 00		 cmp	 [RunFlag],0
    873	    0050  0F 85	022C			 jne	 EXIT
    874	    0054  EB B5				 jmp	 LIST_A
    875
    876	    0056			 Search:
    877	    0056  C6 06	0000e 05		 mov	 [MemFlag],5
    878	    005B  E9 0222			 jmp	 EXIT
    879	    005E  EB AB				 JMP	 LIST_A
    880
    881	    0060			 ERROR_A1:					 ;Gives	error messages for invalid
    882	    0060  E8 0000e			 CALL	 ClearScreen		 ;user inputs (other than 30h-39h)
    883	    0063  66| BE 00000799r		 MOV	 ESI, OFFSET Err1MSg		 ;And takes back to AOA	Main Menu
    884	    0069  E8 0000e			 CALL	  WRITESTRING
    885	    006C  E8 0000e			 CALL	  NEWLINE
    886	    006F  EB 9A				 JMP	  LIST_A
    887	    0071			 ERROR_A2:					 ;U cannot run an application before
    888	    0071  E8 0000e			 CALL	 ClearScreen		 ;U have selected an application
    889	    0074  66| BE 000007D6r		 MOV	 ESI, OFFSET Err2Msg		 ;Displays appropriate Msg and
    890	    007A  E8 0000e			 CALL	  WRITESTRING			 ;Display the AOA Main Menu
    891	    007D  E8 0000e			 CALL	  NEWLINE
    892	    0080  EB 89				 JMP	  LIST_A
    893	    0082			 RealModeLoader:
    894	    0082  66| BE 0000054Fr		 MOV	 ESI, OFFSET Prmt11Msg
    895	    0088  E8 0000e			 CALL	  WRITESTRING
    896	    008B  66| BE 000003B3r		 MOV	 ESI, OFFSET Prmt3Msg
    897	    0091  E8 0000e			 CALL	  WRITESTRING
    898						 ;CALL	 ASCII2HEX	     ;RKK hardcoded
    899
    900						 ;mov	 ax,word ptr Temp
    901						 ;mov	 [LoaderSize],ax
    902						 ;0021 is hardcoded
    903						 ;MOV	  ESI, OFFSET Prmt31Msg
    904						 ;CALL	   WRITESTRING
    905						 ;CALL	 ASCII2HEX
    906						 ;mov	 ax,word ptr Temp
    907	    0094  B8 0021			 mov	 ax, 0021h
    908	    0097  A3 0000e			 mov	 [StartLogicalSecNum],ax
    909
    910	    009A  E8 0000e			 call	 aoaminil
    911
    912	    009D  B0 4C				 mov	 al,'L'
Turbo Assembler	 Version 2.5	    08/29/16 14:48:15	    Page 17
prdisp.ASM



    913	    009F  B4 0E				 mov	 ah,14
    914	    00A1  CD 10				 int	 10h
    915	    00A3  B4 10				 mov	 ah,10h
    916	    00A5  CD 16				 int	 16h
    917	    00A7  E8 0000e			 call	 ClearScreen
    918	    00AA  E8 0000e			 call	 ResetPointer
    919					 ;_________________________________________________________
    920					 ; The following instruction jumps to execute EDITOR program
    921					 ;  that is loaded at 8200h
    922					 ; After the editor runs, it must return to the	next instruction
    923					 ; after jump
    924					 ; make	sure you check the offset of this next instruction in
    925					 ;  the	prdisp.lst file	and add	that value to starting address
    926					 ;  of the aoadisp routine in the exe file
    927					 ; for example
    928					 ;  starting address of	prdisp is 2CF0
    929					 ;  offset of the next instruction after this JMP is 00C4
    930					 ;  then 600h +	00C4 + 2CF0 = 33B4H
    931					 ; 33B4	must be	initialized in the return address in e.asm file
    932					 ;_________________________________________________________
    933	    00AD  FF 2E	08D8r			 JMP	 DWORD PTR [LoaderAddress] ; JUMP to Editor Program
    934
    935					 ;restore the DS to RDataSeg and add 80h so that the offsets will be correct.
    936	    00B1  66| 50			 push	 eax
    937	    00B3  B0 4D				 mov	 al, 'M'
    938	    00B5  B4 0E				 mov	 ah, 14
    939	    00B7  CD 10				 int	 10h
    940	    00B9  B4 10				 mov	 ah,10h
    941	    00BB  CD 16				 int	 16h
    942	    00BD  66| 58			 pop	 eax
    943
    944	    00BF  B8 0000s			 mov	 ax,RDataSeg
    945	    00C2  05 0080			 add	 ax,80h
    946	    00C5  8E D8				 mov	 ds,ax
    947
    948	    00C7  66| B8 00000000		 mov	 eax, 0
    949	    00CD  B8 7BEE			 mov	 ax, 7beeh
    950	    00D0  66| 8B E0			 mov	 esp, eax
    951
    952	    00D3  E8 0000e			 call	 ClearScreen
    953
    954	    00D6  66| BE 00000000r		 MOV	 ESI, OFFSET prompt1
    955	    00DC  E8 0000e			 CALL	  WRITESTRING
    956	    00DF  B4 10				 mov	 ah,10h
    957	    00E1  CD 16				 int	 16h
    958
    959	    00E3  E9 FF25			 JMP	  LIST_A
    960	    00E6  E9 0197			 JMP	 EXIT
    961	    00E9			 ERROR_A4:					 ;These	services are not yet available in   +
    962					 the AOA interface.
    963	    00E9  66| BE 0000037Dr		 MOV	 ESI, OFFSET Prmt2MSg		 ;Gives	appropriate Msg(For Future Use)
    964	    00EF  E8 0000e			 CALL	  WRITESTRING			 ;Takes	back to	AOA Main Menu
    965	    00F2  90				 nop
    966	    00F3  66| BE 00000000r		 MOV	 ESI, OFFSET prompt1
    967	    00F9  E8 0000e			 CALL	  WRITESTRING
    968	    00FC  B4 10				 mov	 ah,10h
    969	    00FE  CD 16				 int	 16h
Turbo Assembler	 Version 2.5	    08/29/16 14:48:15	    Page 18
prdisp.ASM



    970
    971	    0100  E9 FF08			 JMP	  LIST_A
    972
    973	    0103			 QUIT:
    974	    0103  E8 0000e			 CALL	  NEWLINE
    975	    0106  66| BE 0000041Ar		 MOV	 ESI, OFFSET Prmt4Msg
    976	    010C  E8 0000e			 CALL	  WRITESTRING
    977	    010F  E9 016E			 JMP	  EXIT				 ;by command interpretter and Quits the	AOA +
    978					 interface
    979
    980	    0112			 SUCESS_A:
    981	    0112  E8 0000e			 CALL	 GETKEYFORMENU
    982	    0115  3C 30				 CMP	 AL,30H				 ;Compares the validity	of user	input
    983	    0117  0F 82	FF45			 JB	  ERROR_A1			 ;valid	input 0-9 (30h-39h)
    984	    011B  3C 39				 CMP	 AL,39H				 ;and drives the control to appropriate
    985	    011D  0F 87	FF3F			 JA	  ERROR_A1			 ;labels in the	code
    986	    0121  3C 30				 CMP	 AL,30H
    987	    0123  74 DE				 JE	  QUIT
    988	    0125  3C 31				 CMP	 AL,31H
    989	    0127  0F 84	00A4			 JE	  TRY_B
    990	    012B  3C 32				 CMP	 AL,32H
    991	    012D  0F 84	FEE0			 JE	 LOADER
    992	    0131  3C 33				 CMP	 AL,33H
    993	    0133  0F 84	FF14			 JE	 RUNNER
    994	    0137  3C 39				 CMP	 AL,39H
    995	    0139  73 10				 JAE	  MEMORYDUMP1
    996	    013B  3C 34				 CMP	 AL,34H
    997	    013D  0F 84	FF41			 JE	 RealModeLoader
    998	    0141  3C 35				 CMP	 AL,35H
    999	    0143  0F 84	FF0F			 je	 Search
   1000	    0147  3C 36				 cmp	 al,36h
   1001	    0149  73 9E				 JAE	  ERROR_A4
   1002	    014B			 MEMORYDUMP1:
   1003	    014B  E8 0000e			 CALL	 ClearScreen
   1004	    014E  E8 0000e			 CALL	 ResetPointer
   1005
   1006						 NewLineM
1  1007	    0151  66| 50				 push	 eax
1  1008	    0153  B0 0D					 mov	 al,0dh
1  1009	    0155  B4 0E					 mov	 ah,14
1  1010	    0157  CD 10					 int	 10h
1  1011	    0159  B0 0A					 mov	 al,0ah
1  1012	    015B  B4 0E					 mov	 ah,14
1  1013	    015D  CD 10					 int	 10h
1  1014	    015F  66| 58				 pop	 eax
   1015						 NewLineM
1  1016	    0161  66| 50				 push	 eax
1  1017	    0163  B0 0D					 mov	 al,0dh
1  1018	    0165  B4 0E					 mov	 ah,14
1  1019	    0167  CD 10					 int	 10h
1  1020	    0169  B0 0A					 mov	 al,0ah
1  1021	    016B  B4 0E					 mov	 ah,14
1  1022	    016D  CD 10					 int	 10h
1  1023	    016F  66| 58				 pop	 eax
   1024						 NewLineM
1  1025	    0171  66| 50				 push	 eax
1  1026	    0173  B0 0D					 mov	 al,0dh
Turbo Assembler	 Version 2.5	    08/29/16 14:48:15	    Page 19
prdisp.ASM



1  1027	    0175  B4 0E					 mov	 ah,14
1  1028	    0177  CD 10					 int	 10h
1  1029	    0179  B0 0A					 mov	 al,0ah
1  1030	    017B  B4 0E					 mov	 ah,14
1  1031	    017D  CD 10					 int	 10h
1  1032	    017F  66| 58				 pop	 eax
   1033
   1034	    0181  66| BE 0000068Dr		 MOV	 ESI, OFFSET PrmtLA1Msg	 ;read lower 16	bits offset in hex for memory dump
   1035	    0187  E8 0000e			 CALL	  WRITESTRING
   1036	    018A  E8 0000e			 CALL	 ASCII2HEX ; chars read	in ascii and converted into hex	and placed in Temp
   1037	    018D  A1 0000e			 mov	 ax,word ptr Temp
   1038						 ;swap 16 bits
   1039	    0190  A3 08B5r			 mov	 [temp1],ax
   1040	    0193  66| BE 000006B8r		 MOV	 ESI, OFFSET PrmtLA2Msg	 ;read higher 16 bits offset for memory	dump
   1041	    0199  E8 0000e			 CALL	 WRITESTRING
   1042	    019C  E8 0000e			 CALL	 ASCII2HEX
   1043	    019F  66| B8 00000000		 mov	 eax,0
   1044	    01A5  A1 0000e			 mov	 ax,word ptr Temp
   1045	    01A8  66| C1 C0 10			 rol	 eax,16
   1046	    01AC  A1 08B5r			 mov	 ax,temp1
   1047	    01AF  66| A3 0000e			 mov	 [MemoryOffset],eax  ; MemoryOffset contains 4 byte offset
   1048	    01B3  C6 06	0000e 01		 mov	 [MemFlag],1	     ; flag is set to indicate that
   1049	    01B8  E9 00C5			 jmp	 EXIT
   1050	    01BB  E9 FE4D			 JMP	 LIST_A
   1051					 ;====================================================================================
   1052
   1053					 ;The labels suffexed with '_B'	like "TRY_B" correspond	to the AOA Application Menu
   1054
   1055					 ;====================================================================================
   1056	    01BE			 ERROR_B1:
   1057	    01BE  E8 0000e			 CALL	 ClearScreen
   1058	    01C1  66| BE 00000799r		 MOV	 ESI, OFFSET Err1MSg
   1059	    01C7  E8 0000e			 CALL	  WRITESTRING
   1060	    01CA  E8 0000e			 CALL	  NEWLINE
   1061	    01CD  EB 06				 JMP	  LIST_B
   1062	    01CF			 TRY_B:					;RKK this is for load application
   1063	    01CF  E8 0000e			 CALL	 ClearScreen
   1064	    01D2  E8 0000e			 CALL	 ResetPointer
   1065	    01D5			 LIST_B:
   1066	    01D5  E8 00B7			 CALL	  APPL_MENU
   1067	    01D8  E8 0000e			 CALL	  GETKEYFORMENU
   1068	    01DB			 CHECK_B:
   1069	    01DB  3C 30				 CMP	 AL,30H
   1070	    01DD  72 DF				 JB	  ERROR_B1
   1071	    01DF  3C 39				 CMP	 AL,39H
   1072	    01E1  77 DB				 JA	  ERROR_B1
   1073	    01E3			 SUCESS_B:					 ;Compares user	input and jmps
   1074											 ;to apppropriate labels
   1075	    01E3  3C 31				 CMP	 AL,31H
   1076	    01E5  74 08				 JE	  APP_B1
   1077	    01E7  3C 32				 CMP	 AL,32H
   1078	    01E9  74 37				 JE	  APP_B2
   1079	    01EB  3C 30				 CMP	 AL,30H
   1080	    01ED  74 7C				 JE	  APP_B0
   1081
   1082					 ;These	comments apply to the labels APP_B1 to APP_B2:
   1083					 ;If the input is between 1-9, the application from the	Menu
Turbo Assembler	 Version 2.5	    08/29/16 14:48:15	    Page 20
prdisp.ASM



   1084					 ;is selected and transfers control to the label PARAMETER_B
   1085	    01EF			 APP_B1:
   1086	    01EF  66| BE 0000054Fr		 MOV	 ESI, OFFSET Prmt11Msg
   1087	    01F5  E8 0000e			 CALL	  WRITESTRING
   1088	    01F8  66| BE 000003B3r		 MOV	 ESI, OFFSET Prmt3Msg
   1089	    01FE  E8 0000e			 CALL	  WRITESTRING
   1090						 ;CALL	 ASCII2HEX
   1091						 ;mov	 ax,word ptr Temp
   1092						 ;mov	 [LoaderSize1],ax  RKK hard coded
   1093
   1094						 ;0021 is hardcoded
   1095						 ;MOV	  ESI, OFFSET Prmt31Msg
   1096						 ;CALL	   WRITESTRING
   1097						 ;CALL	 ASCII2HEX
   1098						 ;mov	 ax,word ptr Temp
   1099						 ;mov	 ax, 0021h
   1100						 ;mov	 [StartLogicalSecNum1],ax  RKK hardcoded
   1101
   1102						 ;0000 is hardcoded
   1103						 ;MOV	  ESI, OFFSET PrmtLA1Msg ;read lower 16	bits in	hex offset address for app1
   1104						 ;CALL	   WRITESTRING
   1105						 ;CALL	 ASCII2HEX
   1106						 ;mov	 ax,word ptr Temp
   1107	    0201  B8 0000			 mov	 ax, 0000h
   1108						 ;swap 16 bits
   1109	    0204  A3 08B5r			 mov	 [temp1],ax
   1110
   1111						 ;0001 is hardcoded
   1112						 ;MOV	  ESI, OFFSET PrmtLA2Msg ;read higher 16 bits in hex offset address for	app1
   1113						 ;CALL	  WRITESTRING
   1114						 ;CALL	 ASCII2HEX
   1115	    0207  66| B8 00000000		 mov	 eax,0
   1116						 ;mov	 ax,word ptr Temp
   1117	    020D  B8 0001			 mov	 ax, 0001h
   1118	    0210  66| C1 C0 10			 rol	 eax,16
   1119	    0214  A1 08B5r			 mov	 ax,temp1
   1120						 ;mov	 [LoadOffset1],eax	    RKK	loaded directly
   1121
   1122						 ;1000h	is hardcoded
   1123						 ;MOV	  ESI, OFFSET PrmtSAMsg
   1124						 ;CALL	   WRITESTRING
   1125						 ;CALL	 ASCII2HEX
   1126						 ;mov	 ax,word ptr Temp
   1127	    0217  B8 1000			 mov	 ax, 1000h
   1128						 ;mov	 [JumpOffset1],ax	   RKK hardcoded
   1129	    021A  C6 06	08D6r 31		 mov	 ParamFlag,'1'
   1130	    021F  E9 FDE9			 jmp	 LIST_A
   1131
   1132	    0222			 APP_B2:
   1133	    0222  66| BE 00000585r		 MOV	 ESI, OFFSET Prmt12Msg
   1134	    0228  E8 0000e			 CALL	  WRITESTRING
   1135	    022B  66| BE 000003B3r		 MOV	 ESI, OFFSET Prmt3Msg
   1136	    0231  E8 0000e			 CALL	  WRITESTRING
   1137	    0234  E8 0000e			 CALL	 ASCII2HEX
   1138	    0237  A1 0000e			 mov	 ax,word ptr Temp
   1139	    023A  A3 08C6r			 mov	 [LoaderSize2],ax
   1140						 ;0021 is hardcoded
Turbo Assembler	 Version 2.5	    08/29/16 14:48:15	    Page 21
prdisp.ASM



   1141						 ;MOV	  ESI, OFFSET Prmt31Msg
   1142						 ;CALL	   WRITESTRING
   1143						 ;CALL	 ASCII2HEX
   1144						 ;mov	 ax,word ptr Temp
   1145	    023D  B8 0021			 mov	 ax, 0021h
   1146	    0240  A3 08CCr			 mov	 [StartLogicalSecNum2],ax
   1147
   1148						 ;0000h	is hardcoded
   1149						 ;MOV	  ESI, OFFSET PrmtLA1Msg
   1150						 ;CALL	   WRITESTRING
   1151						 ;CALL	 ASCII2HEX
   1152						 ;mov	 ax,word ptr Temp
   1153	    0243  B8 0000			 mov	 ax, 0000h
   1154	    0246  A3 08B5r			 mov	 [temp1],ax
   1155
   1156						 ;0001h	is hardcoded
   1157						 ;MOV	  ESI, OFFSET PrmtLA2Msg ;read higher 16 bits
   1158						 ;CALL	  WRITESTRING
   1159						 ;CALL	 ASCII2HEX
   1160	    0249  66| B8 00000000		 mov	 eax,0
   1161						 ;mov	 ax,word ptr Temp
   1162	    024F  B8 0001			 mov	 ax, 0001h
   1163	    0252  66| C1 C0 10			 rol	 eax,16
   1164	    0256  A1 08B5r			 mov	 ax,temp1
   1165	    0259  66| A3 08BBr			 mov	 [LoadOffset2],eax
   1166
   1167						 ;1000h	is hardcoded
   1168						 ;MOV	  ESI, OFFSET PrmtSAMsg
   1169						 ;CALL	   WRITESTRING
   1170						 ;CALL	 ASCII2HEX
   1171						 ;mov	 ax,word ptr Temp
   1172	    025D  B8 1000			 mov	 ax, 1000h
   1173	    0260  A3 08D2r			 mov	 [JumpOffset2],ax
   1174	    0263  C6 06	08D6r 32		 mov	 ParamFlag,'2'
   1175	    0268  E9 FDA0			 jmp	 LIST_A
   1176
   1177	    026B			 APP_B0:				      ;If the iput is 0, takes back to AOA MainMenu
   1178	    026B  66| BE 000005BBr		 MOV	 ESI, OFFSET Prmt20Msg
   1179	    0271  E8 0000e			 CALL	  WRITESTRING
   1180	    0274  66| BE 000003B3r		 MOV	 ESI, OFFSET Prmt3Msg
   1181	    027A  E8 0000e			 CALL	  WRITESTRING
   1182	    027D  E9 FD88			 JMP	  TRY_A
   1183
   1184					 ;=========================================================================================
   1185
   1186					 ;===================================================================================
   1187
   1188	    0280			 EXIT:						 ;exit to AOA
   1189	    0280  E8 0000e			 CALL	 ClearScreen
   1190	    0283  E8 0000e			 CALL	 ResetPointer
   1191					 ;----------------------------------------
   1192	    0286  66| 5F			 pop	 edi
   1193	    0288  66| 59			 pop	 ecx
   1194	    028A  66| 5E			 pop	 esi
   1195	    028C  66| 58			 pop	 eax
   1196	    028E  C3				 RET
   1197
Turbo Assembler	 Version 2.5	    08/29/16 14:48:15	    Page 22
prdisp.ASM



   1198	    028F			 AOADisp ENDP
   1199					 ;----------------------------------------------------------------------------
   1200
   1201					 ;----------------------------------------------------------------------------
   1202	    028F			 APPL_MENU	 PROC
   1203	    028F  66| 56			 PUSH	 ESI
   1204	    0291  E8 0000e			 CALL	  ClearScreen
   1205	    0294  E8 0000e			 CALL	  RESETPOINTER
   1206	    0297  66| BE 00000262r		 MOV	 ESI, OFFSET MenuMsg1
   1207	    029D  E8 0000e			 CALL	  WRITESTRING
   1208	    02A0  E8 0000e			 CALL	  NEWLINE
   1209	    02A3  66| BE 00000293r		 MOV	 ESI, OFFSET UnivMsg1
   1210	    02A9  E8 0000e			 CALL	  WRITESTRING
   1211	    02AC  E8 0000e			 CALL	  NEWLINE
   1212	    02AF  66| BE 000002C9r		 MOV	 ESI, OFFSET App1Msg
   1213	    02B5  E8 0000e			 CALL	  WRITESTRING
   1214	    02B8  66| BE 000002F4r		 MOV	 ESI, OFFSET App2Msg
   1215	    02BE  E8 0000e			 CALL	  WRITESTRING
   1216	    02C1  66| BE 0000031Fr		 MOV	 ESI, OFFSET App0Msg
   1217	    02C7  E8 0000e			 CALL	  WRITESTRING
   1218	    02CA  E8 0000e			 CALL	  NEWLINE
   1219	    02CD  66| BE 00000354r		 MOV	 ESI, OFFSET Prmt1Msg
   1220	    02D3  E8 0000e			 CALL	  WRITESTRING
   1221
   1222	    02D6  66| 5E			 POP	 ESI
   1223	    02D8  C3				 RET
   1224
   1225
   1226
   1227	    02D9			 APPL_MENU	 ENDP
   1228					 ;----------------------------------------------------------------------------
   1229
   1230					 ;----------------------------------------------------------------------------
   1231					 ;----------------------------------------------------------------------------
   1232	    02D9			 MAIN_MENU PROC
   1233
   1234	    02D9  66| 56			 PUSH	 ESI
   1235	    02DB  E8 0000e			 CALL	 ClearScreen
   1236	    02DE  E8 0000e			 CALL	 RESETPOINTER
   1237	    02E1  66| BE 00000020r		 MOV	 ESI,OFFSET MenuMsg
   1238	    02E7  E8 0000e			 CALL	 WRITESTRING
   1239	    02EA  E8 0000e			 CALL	 NEWLINE
   1240	    02ED  66| BE 00000051r		 MOV	 ESI,OFFSET UnivMsg
   1241	    02F3  E8 0000e			 CALL	 WRITESTRING
   1242	    02F6  E8 0000e			 CALL	 NEWLINE
   1243	    02F9  66| BE 00000089r		 MOV	 ESI,OFFSET ApplMsg
   1244	    02FF  E8 0000e			 CALL	 WRITESTRING
   1245	    0302  66| BE 000000B9r		 MOV	 ESI,OFFSET LoadMSg
   1246	    0308  E8 0000e			 CALL	 WRITESTRING
   1247	    030B  66| BE 000000E9r		 MOV	 ESI,OFFSET RunMSg
   1248	    0311  E8 0000e			 CALL	 WRITESTRING
   1249	    0314  66| BE 00000119r		 MOV	 ESI,OFFSET CpuMsg
   1250	    031A  E8 0000e			 CALL	 WRITESTRING
   1251	    031D  66| BE 0000013Er		 MOV	 ESI,OFFSET MemMSg
   1252	    0323  E8 0000e			 CALL	 WRITESTRING
   1253	    0326  66| BE 00000172r		 MOV	 ESI,OFFSET A1MSg
   1254	    032C  E8 0000e			 CALL	 WRITESTRING
Turbo Assembler	 Version 2.5	    08/29/16 14:48:15	    Page 23
prdisp.ASM



   1255	    032F  66| BE 000001A2r		 MOV	 ESI,OFFSET A2MSg
   1256	    0335  E8 0000e			 CALL	 WRITESTRING
   1257	    0338  66| BE 000001D2r		 MOV	 ESI,OFFSET A3MSg
   1258	    033E  E8 0000e			 CALL	 WRITESTRING
   1259	    0341  66| BE 00000202r		 MOV	 ESI,OFFSET A4MSg
   1260	    0347  E8 0000e			 CALL	 WRITESTRING
   1261	    034A  66| BE 00000232r		 MOV	 ESI,OFFSET ExitMSg
   1262	    0350  E8 0000e			 CALL	 WRITESTRING
   1263	    0353  E8 0000e			 CALL	 NEWLINE
   1264	    0356  66| BE 00000354r		 MOV	 ESI,OFFSET Prmt1Msg
   1265	    035C  E8 0000e			 CALL	 WRITESTRING
   1266	    035F  66| 5E			 POP	 ESI
   1267
   1268	    0361  C3				 RET
   1269
   1270	    0362			 MAIN_MENU ENDP
   1271					 ;----------------------------------------------------------------------------
   1272
   1273					 ;----------------------------------------------------------------------------
   1274	    0362			 RCodeSeg	 ENDS
   1275							 END
Turbo Assembler	 Version 2.5	    08/29/16 14:48:15	    Page 24
Symbol Table




Symbol Name		Type   Value			   Cref	(defined at #)

??DATE			Text   "08/29/16"
??FILENAME		Text   "prdisp	"
??TIME			Text   "14:48:15"
??VERSION		Number 0205
@CPU			Text   0D8FH			   #21
@CURSEG			Text   RCODESEG			   #444	 #820
@FILENAME		Text   PRDISP
@WORDSIZE		Text   2			   #21	#444  #820
A1MSG			Byte   RDATASEG:0172		   #504	 1253
A2MSG			Byte   RDATASEG:01A2		   #511	 1255
A3MSG			Byte   RDATASEG:01D2		   #518	 1257
A4MSG			Byte   RDATASEG:0202		   #525	 1259
AOADISP			Near   RCODESEG:0000		   4  #824
AOAMINIL		Near   ----:---- Extern		   #5  910
APP0MSG			Byte   RDATASEG:031F		   #570	 1216
APP1MSG			Byte   RDATASEG:02C9		   #556	 1212
APP2MSG			Byte   RDATASEG:02F4		   #563	 1214
APPLMSG			Byte   RDATASEG:0089		   #469	 1243
APPLNUM			Byte   RDATASEG:08C3		   10  #802  856
APPL_MENU		Near   RCODESEG:028F		   1066	 #1202
APP_B0			Near   RCODESEG:026B		   1080	 #1177
APP_B1			Near   RCODESEG:01EF		   1076	 #1085
APP_B2			Near   RCODESEG:0222		   1078	 #1132
ASCII2HEX		Near   ----:---- Extern		   #6  1036  1042  1137
AT386CGATE		Number 008C			   #382
AT386IGATE		Number 008E			   #383
AT386TGATE		Number 008F			   #384
AT386TSS		Number 0089			   #381
ATCCO			Number 009C			   #374
ATCCOR			Number 009E			   #375
ATCE			Number 0098			   #372
ATCER			Number 009A			   #373
ATDR			Number 0090			   #368
ATDW			Number 0092			   #369
ATDWA			Number 0093			   #370
ATLDT			Number 0082			   #379
ATSWA			Number 0096			   #371
ATTASKGATE		Number 0085			   #380
BXPOINTER1		Dword  ----:---- Extern		   #12
CHECK_B			Near   RCODESEG:01DB		   #1068
CLEARSCREEN		Near   ----:---- Extern		   #435	 833  842  882	888  917  952  1003  1057  1063	 1189  1204  1235
CLOCK_TICK_RATE		Number 001234DC			   #428	 429
CPUMSG			Byte   RDATASEG:0119		   #490	 1249
D32			Number 0040			   #409
DPL0			Number 0000			   #388
DPL1			Number 0020			   #389
DPL2			Number 0040			   #390
DPL3			Number 0060			   #391
ERR1MSG			Byte   RDATASEG:0799		   #755	 883  1058
ERR2MSG			Byte   RDATASEG:07D6		   #764	 889
ERR3MSG			Byte   RDATASEG:0819		   #774
ERR4MSG			Byte   RDATASEG:0859		   #784
ERR5MSG			Byte   RDATASEG:0887		   #791
ERROR_A1		Near   RCODESEG:0060		   #881	 983  985
Turbo Assembler	 Version 2.5	    08/29/16 14:48:15	    Page 25
Symbol Table



ERROR_A2		Near   RCODESEG:0071		   #887
ERROR_A4		Near   RCODESEG:00E9		   #961	 1001
ERROR_B1		Near   RCODESEG:01BE		   #1056  1070	1072
EXIT			Near   RCODESEG:0280		   869	873  878  960  977  1049  #1188
EXITMSG			Byte   RDATASEG:0232		   #532	 1261
GETKEYFORMENU		Near   ----:---- Extern		   #436	 981  1067
GET_PARAMETER		Near   ----:---- Extern		   #438
GL			Number 0080			   #410
HELLOWORLD1MSG		Byte   RDATASEG:0740		   #737
HZ			Number 0064			   #427	 429  429
IFL			Number 0200			   #414
IOPL0			Number 0000			   #402
IOPL1			Number 1000			   #403
IOPL2			Number 2000			   #404
IOPL3			Number 3000			   #405
JUMPOFFSET1		Word   RDATASEG:08D0		   10  #810
JUMPOFFSET2		Word   RDATASEG:08D2		   10  #811  1173
JUMPOFFSET3		Word   RDATASEG:08D4		   #812
LATCH			Number 2E9C			   #429
LIST_A			Near   RCODESEG:000B		   #834	 859  874  879	886  892  959  971  1050  1130	1175
LIST_B			Near   RCODESEG:01D5		   1061	 #1065
LOADARRAY		Byte   ----:---- Extern		   #11
LOADER			Near   RCODESEG:0011		   #841	 991
LOADERADDRESS		Word   RDATASEG:08D8		   #815	 933
LOADERSIZE		Word   ----:---- Extern		   #12
LOADERSIZE1		Word   RDATASEG:08C4		   8  #803
LOADERSIZE2		Word   RDATASEG:08C6		   8  #805  1139
LOADERSIZE3		Word   RDATASEG:08C8		   #806
LOADFLAG		Byte   RDATASEG:08D7		   10  #814
LOADINGDONE		Byte   RDATASEG:08DC		   #816
LOADING_OK		Near   RCODESEG:0048		   858	#860
LOADMSG			Byte   RDATASEG:00B9		   #476	 1245
LOADOFFSET1		Dword  RDATASEG:08B7		   8  #799
LOADOFFSET2		Dword  RDATASEG:08BB		   8  #800  1165
LOADOFFSET3		Dword  RDATASEG:08BF		   #801
MAIN_MENU		Near   RCODESEG:02D9		   836	#1232
MEMFLAG			Byte   ----:---- Extern		   #13	877  1048
MEMMSG			Byte   RDATASEG:013E		   #496	 1251
MEMORYDUMP1		Near   RCODESEG:014B		   995	#1002
MEMORYDUMP1MSG		Byte   RDATASEG:0765		   #743
MEMORYOFFSET		Dword  ----:---- Extern		   #13	1047
MENUMSG			Byte   RDATASEG:0020		   #454	 1237
MENUMSG1		Byte   RDATASEG:0262		   #541	 1206
NEWLINE			Near   ----:---- Extern		   #437	 885  891  974	1060  1208  1211  1218	1239  1242  1263
NTL			Number 4000			   #417
PARAMFLAG		Byte   RDATASEG:08D6		   #813	 857  1129  1174
PL			Number 0001			   #421
PRINTMEMR		Near   ----:---- Extern		   #440
PRMT10MSG		Byte   RDATASEG:0530		   #653
PRMT11MSG		Byte   RDATASEG:054F		   #658	 894  1086
PRMT12MSG		Byte   RDATASEG:0585		   #666	 1133
PRMT1MSG		Byte   RDATASEG:0354		   #581	 850  1219  1264
PRMT20MSG		Byte   RDATASEG:05BB		   #674	 1178
PRMT21MSG		Byte   RDATASEG:05F0		   #682	 844
PRMT22MSG		Byte   RDATASEG:0622		   #690	 846
PRMT23MSG		Byte   RDATASEG:0641		   #695	 848
PRMT2MSG		Byte   RDATASEG:037D		   #587	 963
Turbo Assembler	 Version 2.5	    08/29/16 14:48:15	    Page 26
Symbol Table



PRMT31MSG		Byte   RDATASEG:03E4		   #602
PRMT3MSG		Byte   RDATASEG:03B3		   #595	 896  1088  1135  1180
PRMT4MSG		Byte   RDATASEG:041A		   #610	 975
PRMT5MSG		Byte   RDATASEG:043C		   #615
PRMT6MSG		Byte   RDATASEG:045B		   #620
PRMT7MSG		Byte   RDATASEG:049B		   #630
PRMT8MSG		Byte   RDATASEG:04D1		   #638
PRMT9MSG		Byte   RDATASEG:0505		   #646
PRMTLA1MSG		Byte   RDATASEG:068D		   #707	 1034
PRMTLA2MSG		Byte   RDATASEG:06B8		   #714	 1040
PRMTLBMSG		Byte   RDATASEG:0660		   #700
PRMTRUNMSG		Byte   RDATASEG:070F		   #728
PRMTSAMSG		Byte   RDATASEG:06E4		   #721
PROMPT1			Byte   RDATASEG:0000		   #446	 954  966
PUTHEX32R		Near   ----:---- Extern		   #433
QUIT			Near   RCODESEG:0103		   #973	 987
REALMODELOADER		Near   RCODESEG:0082		   #893	 997
RESETPOINTER		Near   ----:---- Extern		   #439	 843  918  1004	 1064  1190  1205  1236
RFL			Number 00010000			   #415
RFLW			Number 0001			   #416
RPL0			Number 0000			   #395
RPL1			Number 0001			   #396
RPL2			Number 0002			   #397
RPL3			Number 0003			   #398
RUNARRAY		Byte   ----:---- Extern		   #11
RUNFLAG			Byte   ----:---- Extern		   #14	872
RUNMSG			Byte   RDATASEG:00E9		   #483	 1247
RUNNER			Near   RCODESEG:004B		   #871	 993
RWR			Number 0000			   #422
RWW			Number 0002			   #423
SEARCH			Near   RCODESEG:0056		   #876	 999
SELECTIONARRAY		Byte   ----:---- Extern		   #11
STARTLOGICALSECNUM	Word   ----:---- Extern		   #12	908
STARTLOGICALSECNUM1	Word   RDATASEG:08CA		   8  #807
STARTLOGICALSECNUM2	Word   RDATASEG:08CC		   8  #808  1146
STARTLOGICALSECNUM3	Word   RDATASEG:08CE		   #809
SUCESS_A		Near   RCODESEG:0112		   839	#980
SUCESS_B		Near   RCODESEG:01E3		   #1073
TEMP			Byte   ----:---- Extern		   #13	1037  1044  1138
TEMP1			Word   RDATASEG:08B5		   #798	 1039  1046  1109  1119	 1154  1164
TIL			Number 0004			   #411
TRY_A			Near   RCODESEG:0008		   #832	 1182
TRY_B			Near   RCODESEG:01CF		   989	#1062
UNIVMSG			Byte   RDATASEG:0051		   #461	 1240
UNIVMSG1		Byte   RDATASEG:0293		   #548	 1209
USS			Number 0000			   #424
USU			Number 0004			   #425
VMFL			Number 00020000			   #412
VMFLW			Number 0002			   #413
WRITESTRING		Near   ----:---- Extern		   #434	 845  847  849	851  884  890  895  897	 955  964  967	976  1035 +
							   1041	 1059  1087  1089  1134	 1136  1179  1181  1207	 1210  1213  1215 +
							   1217	 1220  1238  1241  1244	 1246  1248  1250  1252	 1254  1256  1258 +
							   1260	 1262  1265
Turbo Assembler	 Version 2.5	    08/29/16 14:48:15	    Page 27
Symbol Table




Macro Name						   Cref	(defined at #)

CALL16							   #283
CALL32							   #290
DISABLEA20						   #257
ENABLEA20						   #247
FDCCYL							   #222
FDCHEAD							   #203
FDCSECTOR						   #183
FDC_AL							   #136
FDC_IN							   #118
FDC_OUT							   #97
FDC_WAIT						   #145
JUMP16							   #267
JUMP32							   #274
KEYBOARDLED						   #53
MDELAY							   #166
NEWLINEM						   #234	 1006  1015  1024

Structure Name		Type  Offset			   Cref	(defined at #)

DESC							   #297
 LIMITL			Word   0000
 BASEL			Word   0002
 BASEM			Byte   0004
 ATTRIBUTES		Byte   0005
 LIMITH			Byte   0006
 BASEH			Byte   0007
GATE							   #308
 OFFSETL		Word   0000
 SELECTOR		Word   0002
 DCOUNT			Byte   0004
 GTYPE			Byte   0005
 OFFSETH		Word   0006
PDESC							   #318
 LIMIT			Word   0000
 BASE			Dword  0002
TSS							   #325
 TRLINK			Word   0000
 TRESP0			Dword  0004
 TRSS0			Word   0008
 TRESP1			Dword  000C
 TRSS1			Word   0010
 TRESP2			Dword  0014
 TRSS2			Word   0018
 TRCR3			Dword  001C
 TREIP			Dword  0020
 TREFLAG		Dword  0024
 TREAX			Dword  0028
 TRECX			Dword  002C
 TREDX			Dword  0030
 TREBX			Dword  0034
 TRESP			Dword  0038
 TREBP			Dword  003C
 TRESI			Dword  0040
 TREDI			Dword  0044
Turbo Assembler	 Version 2.5	    08/29/16 14:48:15	    Page 28
Symbol Table



 TRES			Word   0048
 TRCS			Word   004C
 TRSS			Word   0050
 TRDS			Word   0054
 TRFS			Word   0058
 TRGS			Word   005C
 TRLDTR			Word   0060
 TRTRIP			Word   0064
 TRIOMAP		Word   0066
TYPEAPPLICATION						   #25
 NOOFSECTORS		Word   0000
 STARTINGSECTOR		Word   0002
 NAMEAPPLICATION	Byte   0004
TYPECOMMAND						   #37
 COMMAND		Byte   0000
 APPNAME		Byte   0001
 APPINDEX		Byte   0009

Groups & Segments	Bit Size Align	Combine	Class	   Cref	(defined at #)

RCODESEG		16  0362 Para	Public	CODE	   #820	 821
RDATASEG		16  08DD Para	Public	REALDATA   #444	 821  944
